{"version":3,"sources":["utils.js","canvas.js"],"names":["randomIntFromRange","min","max","Math","floor","random","randomColor","colors","length","distance","x1","y1","x2","y2","xDist","yDist","sqrt","pow","module","exports","canvas","document","querySelector","c","getContext","width","innerWidth","height","innerHeight","mouse","x","y","rotate","velocity","angle","rotatedVelocities","cos","sin","resolveCollision","particle","otherParticle","xVelocityDiff","yVelocityDiff","atan2","m1","mass","m2","u1","u2","v1","v2","vFinal1","vFinal2","addEventListener","event","clientX","clientY","init","Particle","radius","color","opacity","beginPath","arc","PI","save","globalAlpha","fillStyle","fill","restore","strokeStyle","stroke","closePath","particles","i","draw","j","push","animate","requestAnimationFrame","clearRect","forEach","update"],"mappings":"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","file":"canvas.532861b6.map","sourceRoot":"..","sourcesContent":["function randomIntFromRange(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n}\n\nfunction randomColor(colors) {\n    return colors[Math.floor(Math.random() * colors.length)]\n}\n\nfunction distance(x1, y1, x2, y2) {\n    const xDist = x2 - x1\n    const yDist = y2 - y1\n\n    return Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2))\n}\n\nmodule.exports = { randomIntFromRange, randomColor, distance }\n","import {distance, randomIntFromRange, randomColor} from './utils.js'\n\nconst canvas = document.querySelector('canvas');\nconst c = canvas.getContext('2d');\n\ncanvas.width = innerWidth;\ncanvas.height = innerHeight;\n\nconst mouse = {\n    x: innerWidth / 2,\n    y: innerHeight / 2\n}\n\nconst colors = ['#2185C5', '#7ECEFD', '#FF7F66'];\n\n/**\n * Rotates coordinate system for velocities\n *\n * Takes velocities and alters them as if the coordinate system they're on was rotated\n *\n * @param  Object | velocity | The velocity of an individual particle\n * @param  Float  | angle    | The angle of collision between two objects in radians\n * @return Object | The altered x and y velocities after the coordinate system has been rotated\n */\n\nfunction rotate(velocity, angle) {\n    const rotatedVelocities = {\n        x: velocity.x * Math.cos(angle) - velocity.y * Math.sin(angle),\n        y: velocity.x * Math.sin(angle) + velocity.y * Math.cos(angle)\n    };\n\n    return rotatedVelocities;\n}\n\n/**\n * Swaps out two colliding particles' x and y velocities after running through\n * an elastic collision reaction equation\n *\n * @param  Object | particle      | A particle object with x and y coordinates, plus velocity\n * @param  Object | otherParticle | A particle object with x and y coordinates, plus velocity\n * @return Null | Does not return a value\n */\n\nfunction resolveCollision(particle, otherParticle) {\n    const xVelocityDiff = particle.velocity.x - otherParticle.velocity.x;\n    const yVelocityDiff = particle.velocity.y - otherParticle.velocity.y;\n\n    const xDist = otherParticle.x - particle.x;\n    const yDist = otherParticle.y - particle.y;\n\n    // Prevent accidental overlap of particles\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist >= 0) {\n\n        // Grab angle between the two colliding particles\n        const angle = -Math.atan2(otherParticle.y - particle.y, otherParticle.x - particle.x);\n\n        // Store mass in var for better readability in collision equation\n        const m1 = particle.mass;\n        const m2 = otherParticle.mass;\n\n        // Velocity before equation\n        const u1 = rotate(particle.velocity, angle);\n        const u2 = rotate(otherParticle.velocity, angle);\n\n        // Velocity after 1d collision equation\n        const v1 = { x: u1.x * (m1 - m2) / (m1 + m2) + u2.x * 2 * m2 / (m1 + m2), y: u1.y };\n        const v2 = { x: u2.x * (m1 - m2) / (m1 + m2) + u1.x * 2 * m2 / (m1 + m2), y: u2.y };\n\n        // Final velocity after rotating axis back to original location\n        const vFinal1 = rotate(v1, -angle);\n        const vFinal2 = rotate(v2, -angle);\n\n        // Swap particle velocities for realistic bounce effect\n        particle.velocity.x = vFinal1.x;\n        particle.velocity.y = vFinal1.y;\n\n        otherParticle.velocity.x = vFinal2.x;\n        otherParticle.velocity.y = vFinal2.y;\n    }\n}\n\n\n// Event Listeners\naddEventListener('mousemove', event => {\n    mouse.x = event.clientX;\n    mouse.y = event.clientY;\n})\n\naddEventListener('resize', () => {\n    canvas.width = innerWidth;\n    canvas.height = innerHeight;\n\n    init();\n});\n\nclass Particle {\n    constructor(x, y, radius, color) {\n        this.x = x;\n        this.y = y;\n        this.velocity = {\n            x : randomIntFromRange(-2, 2),\n            y : randomIntFromRange(-2, 2)\n        }\n        this.radius = radius;\n        this.color = color;\n        this.opacity = 0;\n        this.mass = 1;\n    }\n\n    draw() {\n        c.beginPath()\n        c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n        c.save();\n        c.globalAlpha = this.opacity;\n        c.fillStyle = this.color;\n        c.fill();\n        c.restore();\n        c.strokeStyle = this.color;\n        c.stroke();\n        c.closePath();\n    }\n\n    update(particles) {\n        for(let i = 0; i < particles.length; i++) {\n            if(this === particles[i]) continue;\n            if(distance(this.x, this.y, particles[i].x, particles[i].y) - this.radius * 2 < 0) {\n                resolveCollision(this, particles[i])\n            }\n        }\n\n        if(this.x + this.radius > innerWidth || this.x - this.radius < 0) {\n            this.velocity.x = -this.velocity.x;\n        }\n\n        if(this.y + this.radius > innerHeight || this.y - this.radius < 0) {\n            this.velocity.y = -this.velocity.y;\n        }\n\n        //mouse collision detection\n        if(distance(mouse.x, mouse.y, this.x, this.y) < 150 && this.opacity < 1) {\n            this.opacity += 0.02; \n        } else if(this.opacity > 0) {\n            this.opacity -= 0.02;\n            this.opacity = Math.max(0, this.opacity);\n        }\n\n\n        this.x += this.velocity.x;\n        this.y += this.velocity.y;\n        this.draw();\n    }\n    \n}\n\n// Implementation\nlet particles;\nfunction init() {\n    particles = []\n\n    for (let i = 0; i < 100; i++) {\n        let radius = randomIntFromRange(15,15);\n        let x = randomIntFromRange(radius , canvas.width - radius);\n        let y = randomIntFromRange(radius , canvas.height - radius);\n        let color = randomColor(colors);\n\n        if(i !== 0) {\n            for (let j = 0; j < particles.length; j++) {\n                if(distance(x, y, particles[j].x, particles[j].y) - radius * 2 < 0) {\n                    x = randomIntFromRange(radius , canvas.width - radius);\n                    y = randomIntFromRange(radius , canvas.height - radius);\n        \n                    j = -1;\n                }\n            }\n        }\n        \n        particles.push(new Particle(x, y, radius, color));\n    }\n}\n\n// Animation Loop\nfunction animate() {\n    requestAnimationFrame(animate);\n    c.clearRect(0, 0, canvas.width, canvas.height);\n\n    particles.forEach(particle => particle.update(particles));\n}\n\ninit();\nanimate();\n"]}